% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{inverse_dft}
\alias{inverse_dft}
\title{Inverse Discrete Fourier Transform}
\usage{
inverse_dft(freq_data, len, sampling_rate = NULL)
}
\arguments{
\item{freq_data}{data.frame containing columns "freq" and "amp" with
frequencies and their amplitudes for the inverse transform.}

\item{len}{length of the output waveform, in the unit of interest, or simply
number of data points, if no sampling_rate is given.}

\item{sampling_rate}{single number, indicating number of samples per unit.
Unit should be the same as the denominator for the units of frequency being
considered.}
}
\value{
vector containing the intensity-time domain time-series.
}
\description{
Inverse Discrete Fourier Transform
}
\examples{
audio_file <- system.file("extdata/AudioSampleComplex.mp3",
package = "fourieR")
library(tuneR)
audio_wave <- tuneR::readMP3(audio_file)
wave_form <- audio_wave@left
wave_freq <- dft(wave_form, freq_seq = 1:2000,
                 sampling_rate = audio_wave@samp.rate)
peak_freqs <- get_peaks(wave_freq$amp)
cleaned_wave_form <- inverse_dft(wave_freq[peak_freqs, ], 3,
                                 audio_wave@samp.rate)
cleaned_mp3 <- Wave(cleaned_wave_form, cleaned_wave_form,
                    audio_wave@samp.rate)
## writeWave(cleaned_mp3, "cleaned_wav.wav")
}
