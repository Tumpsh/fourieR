% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{dft}
\alias{dft}
\title{Discrete Fourier Transform}
\usage{
dft(data, freq_seq = NULL, sampling_rate = NULL)
}
\arguments{
\item{data}{vector containing a numeric time series in the time-intensity
domain to be transformed to the frequency-amplitude domain}

\item{freq_seq}{vector of frequencies to include in our transformed data. If
null (default), will be 1:length(data). If sampling_rate is not null,
provided frequencies will be consider as per sampling_rate samples.}

\item{sampling_rate}{single number, indicating number of samples per unit.
Unit should be the same as the denominator for the units of frequency being
considered.}
}
\value{
data.frame containing frequencies and their amplitudes in two
columns.
}
\description{
Discrete Fourier Transform
}
\examples{
audio_file <- system.file("extdata/AudioSampleComplex.mp3",
package = "fourieR")
library(tuneR)
audio_wave <- tuneR::readMP3(audio_file)
wave_form <- audio_wave@left
wave_freq <- dft(wave_form, freq_seq = 1:2000,
                 sampling_rate = audio_wave@samp.rate)
peak_freqs <- get_peaks(wave_freq$amp)
cleaned_wave_form <- inverse_dft(wave_freq[peak_freqs, ], 3,
                                 audio_wave@samp.rate)
cleaned_wave <- Wave(cleaned_wave_form, cleaned_wave_form,
                    audio_wave@samp.rate)
## writeWave(cleaned_wave, "cleaned_wav.wav")
## writeWave(audio_wave, "original_wav.wav")
}
